{"ast":null,"code":"import axios from 'axios';\nconst BASE_URL = 'http://127.0.0.1:8000/api';\nexport const fetchFilteredData = params => {\n  return axios.get(`${BASE_URL}/filtered-data/`, {\n    params\n  });\n};\nexport const fetchFilteredDataWithNames = params => {\n  return axios.get(`${BASE_URL}/filtered-data/`, {\n    params\n  }).then(response => {\n    const data = response.data.values || [];\n    const categories = response.data.categories || {};\n    const mappedData = data.map(item => ({\n      ...item,\n      paytype_name: categories.paytype_id[item.paytype_id],\n      provider_name: categories.provider_id[item.provider_id],\n      employee_type_name: categories.employee_type_id[item.employee_type_id]\n    }));\n    return mappedData;\n  });\n};\nexport const fetchAggregates = groupBy => {\n  return axios.get(`${BASE_URL}/filtered-data/`, {\n    params: {\n      type: 'aggregates',\n      group_by: groupBy\n    }\n  });\n};\nexport const fetchCategories = () => {\n  return axios.get(`${BASE_URL}/filtered-data/`, {\n    params: {\n      type: 'categories'\n    }\n  });\n};\n\n// New function for fetching paytypes\nexport const fetchPaytypes = () => {\n  return axios.get(`${BASE_URL}/filtered-data/`, {\n    params: {\n      type: 'categories'\n    }\n  }).then(response => {\n    return response.data.paytype_id || {}; // Assuming the backend response includes paytype_id\n  });\n};","map":{"version":3,"names":["axios","BASE_URL","fetchFilteredData","params","get","fetchFilteredDataWithNames","then","response","data","values","categories","mappedData","map","item","paytype_name","paytype_id","provider_name","provider_id","employee_type_name","employee_type_id","fetchAggregates","groupBy","type","group_by","fetchCategories","fetchPaytypes"],"sources":["/Users/roshankhandelwal/Roshan/Applications/Practice By Numbers/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'http://127.0.0.1:8000/api';\n\nexport const fetchFilteredData = (params) => {\n  return axios.get(`${BASE_URL}/filtered-data/`, { params });\n};\n\nexport const fetchFilteredDataWithNames = (params) => {\n  return axios\n    .get(`${BASE_URL}/filtered-data/`, { params })\n    .then((response) => {\n      const data = response.data.values || [];\n      const categories = response.data.categories || {};\n\n      const mappedData = data.map((item) => ({\n        ...item,\n        paytype_name: categories.paytype_id[item.paytype_id],\n        provider_name: categories.provider_id[item.provider_id],\n        employee_type_name: categories.employee_type_id[item.employee_type_id],\n      }));\n\n      return mappedData;\n    });\n};\n\nexport const fetchAggregates = (groupBy) => {\n  return axios.get(`${BASE_URL}/filtered-data/`, { params: { type: 'aggregates', group_by: groupBy } });\n};\n\nexport const fetchCategories = () => {\n  return axios.get(`${BASE_URL}/filtered-data/`, { params: { type: 'categories' } });\n};\n\n// New function for fetching paytypes\nexport const fetchPaytypes = () => {\n  return axios.get(`${BASE_URL}/filtered-data/`, { params: { type: 'categories' } }).then((response) => {\n    return response.data.paytype_id || {}; // Assuming the backend response includes paytype_id\n  });\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,2BAA2B;AAE5C,OAAO,MAAMC,iBAAiB,GAAIC,MAAM,IAAK;EAC3C,OAAOH,KAAK,CAACI,GAAG,CAAC,GAAGH,QAAQ,iBAAiB,EAAE;IAAEE;EAAO,CAAC,CAAC;AAC5D,CAAC;AAED,OAAO,MAAME,0BAA0B,GAAIF,MAAM,IAAK;EACpD,OAAOH,KAAK,CACTI,GAAG,CAAC,GAAGH,QAAQ,iBAAiB,EAAE;IAAEE;EAAO,CAAC,CAAC,CAC7CG,IAAI,CAAEC,QAAQ,IAAK;IAClB,MAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAI,CAACC,MAAM,IAAI,EAAE;IACvC,MAAMC,UAAU,GAAGH,QAAQ,CAACC,IAAI,CAACE,UAAU,IAAI,CAAC,CAAC;IAEjD,MAAMC,UAAU,GAAGH,IAAI,CAACI,GAAG,CAAEC,IAAI,KAAM;MACrC,GAAGA,IAAI;MACPC,YAAY,EAAEJ,UAAU,CAACK,UAAU,CAACF,IAAI,CAACE,UAAU,CAAC;MACpDC,aAAa,EAAEN,UAAU,CAACO,WAAW,CAACJ,IAAI,CAACI,WAAW,CAAC;MACvDC,kBAAkB,EAAER,UAAU,CAACS,gBAAgB,CAACN,IAAI,CAACM,gBAAgB;IACvE,CAAC,CAAC,CAAC;IAEH,OAAOR,UAAU;EACnB,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMS,eAAe,GAAIC,OAAO,IAAK;EAC1C,OAAOrB,KAAK,CAACI,GAAG,CAAC,GAAGH,QAAQ,iBAAiB,EAAE;IAAEE,MAAM,EAAE;MAAEmB,IAAI,EAAE,YAAY;MAAEC,QAAQ,EAAEF;IAAQ;EAAE,CAAC,CAAC;AACvG,CAAC;AAED,OAAO,MAAMG,eAAe,GAAGA,CAAA,KAAM;EACnC,OAAOxB,KAAK,CAACI,GAAG,CAAC,GAAGH,QAAQ,iBAAiB,EAAE;IAAEE,MAAM,EAAE;MAAEmB,IAAI,EAAE;IAAa;EAAE,CAAC,CAAC;AACpF,CAAC;;AAED;AACA,OAAO,MAAMG,aAAa,GAAGA,CAAA,KAAM;EACjC,OAAOzB,KAAK,CAACI,GAAG,CAAC,GAAGH,QAAQ,iBAAiB,EAAE;IAAEE,MAAM,EAAE;MAAEmB,IAAI,EAAE;IAAa;EAAE,CAAC,CAAC,CAAChB,IAAI,CAAEC,QAAQ,IAAK;IACpG,OAAOA,QAAQ,CAACC,IAAI,CAACO,UAAU,IAAI,CAAC,CAAC,CAAC,CAAC;EACzC,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}