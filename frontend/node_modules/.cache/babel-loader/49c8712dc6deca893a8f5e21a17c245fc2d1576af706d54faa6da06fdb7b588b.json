{"ast":null,"code":"var _jsxFileName = \"/Users/roshankhandelwal/Roshan/Applications/Practice By Numbers/frontend/src/components/DataTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TableSortLabel, TablePagination } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataTable = ({\n  data\n}) => {\n  _s();\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const rowsPerPage = 10; // Number of records per page\n\n  const handleSort = column => {\n    const isAsc = orderBy === column && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(column);\n\n    // Sort data based on the column and order\n    data.sort((a, b) => {\n      if (isAsc) {\n        return a[column] < b[column] ? -1 : 1;\n      } else {\n        return a[column] > b[column] ? -1 : 1;\n      }\n    });\n  };\n\n  // Calculate records to display for the current page\n  const startIndex = (currentPage - 1) * rowsPerPage;\n  const endIndex = startIndex + rowsPerPage;\n  const paginatedData = data.slice(startIndex, endIndex);\n  const handlePageChange = (event, page) => {\n    setCurrentPage(page);\n  };\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    style: {\n      marginTop: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n              active: orderBy === 'paytype_id',\n              direction: orderBy === 'paytype_id' ? order : 'asc',\n              onClick: () => handleSort('paytype_id'),\n              children: \"Pay Type ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n              active: orderBy === 'amount',\n              direction: orderBy === 'amount' ? order : 'asc',\n              onClick: () => handleSort('amount'),\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n              active: orderBy === 'date',\n              direction: orderBy === 'date' ? order : 'asc',\n              onClick: () => handleSort('date'),\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n              active: orderBy === 'provider_id',\n              direction: orderBy === 'provider_id' ? order : 'asc',\n              onClick: () => handleSort('provider_id'),\n              children: \"Provider ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n              active: orderBy === 'employee_type_id',\n              direction: orderBy === 'employee_type_id' ? order : 'asc',\n              onClick: () => handleSort('employee_type_id'),\n              children: \"Employee Type ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: paginatedData.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: row.paytype_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.provider_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.employee_type_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      component: \"div\",\n      count: data.length,\n      page: currentPage - 1 // Material-UI uses 0-based indexing\n      ,\n      onPageChange: (event, newPage) => handlePageChange(event, newPage + 1),\n      rowsPerPage: rowsPerPage,\n      rowsPerPageOptions: [10] // Only allow 10 rows per page\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(DataTable, \"zOsmbN7TeNwj2WBqmBPyOs/OnxQ=\");\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","useState","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TableSortLabel","TablePagination","jsxDEV","_jsxDEV","DataTable","data","_s","order","setOrder","orderBy","setOrderBy","currentPage","setCurrentPage","rowsPerPage","handleSort","column","isAsc","sort","a","b","startIndex","endIndex","paginatedData","slice","handlePageChange","event","page","component","style","marginTop","children","active","direction","onClick","fileName","_jsxFileName","lineNumber","columnNumber","align","map","row","index","paytype_id","amount","date","provider_id","employee_type_id","count","length","onPageChange","newPage","rowsPerPageOptions","_c","$RefreshReg$"],"sources":["/Users/roshankhandelwal/Roshan/Applications/Practice By Numbers/frontend/src/components/DataTable.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  TableSortLabel,\n  TablePagination,\n} from '@mui/material';\n\nconst DataTable = ({ data }) => {\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const rowsPerPage = 10; // Number of records per page\n\n  const handleSort = (column) => {\n    const isAsc = orderBy === column && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(column);\n\n    // Sort data based on the column and order\n    data.sort((a, b) => {\n      if (isAsc) {\n        return a[column] < b[column] ? -1 : 1;\n      } else {\n        return a[column] > b[column] ? -1 : 1;\n      }\n    });\n  };\n\n  // Calculate records to display for the current page\n  const startIndex = (currentPage - 1) * rowsPerPage;\n  const endIndex = startIndex + rowsPerPage;\n  const paginatedData = data.slice(startIndex, endIndex);\n\n  const handlePageChange = (event, page) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <TableContainer component={Paper} style={{ marginTop: '20px' }}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>\n              <TableSortLabel\n                active={orderBy === 'paytype_id'}\n                direction={orderBy === 'paytype_id' ? order : 'asc'}\n                onClick={() => handleSort('paytype_id')}\n              >\n                Pay Type ID\n              </TableSortLabel>\n            </TableCell>\n            <TableCell align=\"right\">\n              <TableSortLabel\n                active={orderBy === 'amount'}\n                direction={orderBy === 'amount' ? order : 'asc'}\n                onClick={() => handleSort('amount')}\n              >\n                Amount\n              </TableSortLabel>\n            </TableCell>\n            <TableCell align=\"right\">\n              <TableSortLabel\n                active={orderBy === 'date'}\n                direction={orderBy === 'date' ? order : 'asc'}\n                onClick={() => handleSort('date')}\n              >\n                Date\n              </TableSortLabel>\n            </TableCell>\n            <TableCell align=\"right\">\n              <TableSortLabel\n                active={orderBy === 'provider_id'}\n                direction={orderBy === 'provider_id' ? order : 'asc'}\n                onClick={() => handleSort('provider_id')}\n              >\n                Provider ID\n              </TableSortLabel>\n            </TableCell>\n            <TableCell align=\"right\">\n              <TableSortLabel\n                active={orderBy === 'employee_type_id'}\n                direction={orderBy === 'employee_type_id' ? order : 'asc'}\n                onClick={() => handleSort('employee_type_id')}\n              >\n                Employee Type ID\n              </TableSortLabel>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {paginatedData.map((row, index) => (\n            <TableRow key={index}>\n              <TableCell>{row.paytype_id}</TableCell>\n              <TableCell align=\"right\">{row.amount}</TableCell>\n              <TableCell align=\"right\">{row.date}</TableCell>\n              <TableCell align=\"right\">{row.provider_id}</TableCell>\n              <TableCell align=\"right\">{row.employee_type_id}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n\n      {/* Pagination Controls */}\n      <TablePagination\n        component=\"div\"\n        count={data.length}\n        page={currentPage - 1} // Material-UI uses 0-based indexing\n        onPageChange={(event, newPage) => handlePageChange(event, newPage + 1)}\n        rowsPerPage={rowsPerPage}\n        rowsPerPageOptions={[10]} // Only allow 10 rows per page\n      />\n    </TableContainer>\n  );\n};\n\nexport default DataTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}