{"ast":null,"code":"var _jsxFileName = \"/Users/roshankhandelwal/Roshan/Applications/Practice By Numbers/frontend/src/components/DataTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TableSortLabel, TablePagination } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataTable = ({\n  data\n}) => {\n  _s();\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('');\n  const [currentPage, setCurrentPage] = useState(0);\n  const rowsPerPage = 10;\n  useEffect(() => {\n    setOrder('asc');\n    setOrderBy('');\n  }, [data]);\n  const handleSort = column => {\n    const isAsc = orderBy === column && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(column);\n    data.sort((a, b) => isAsc ? a[column] < b[column] ? -1 : 1 : a[column] > b[column] ? -1 : 1);\n  };\n  const startIndex = currentPage * rowsPerPage;\n  const paginatedData = data.slice(startIndex, startIndex + rowsPerPage);\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            sx: {\n              backgroundColor: '#1e293b',\n              // Dark header background\n              color: '#ffffff',\n              // White text\n              fontWeight: 'bold',\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n              active: orderBy === 'paytype_id',\n              direction: orderBy === 'paytype_id' ? order : 'asc',\n              onClick: () => handleSort('paytype_id'),\n              sx: {\n                color: '#ffffff',\n                // Ensure the sort icon is also white\n                '&:hover': {\n                  color: '#ffcc00' // Optional hover color\n                }\n              },\n              children: \"Pay Type ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            sx: {\n              backgroundColor: '#1e293b',\n              color: '#ffffff',\n              fontWeight: 'bold',\n              textAlign: 'center'\n            },\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: paginatedData.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            backgroundColor: index % 2 === 0 ? '#f8f9fa' : '#ffffff',\n            // Alternating row colors\n            '&:hover': {\n              backgroundColor: '#e0f7fa' // Highlight on hover\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            sx: {\n              color: '#333333',\n              // Row text color\n              textAlign: 'center'\n            },\n            children: row.paytype_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            sx: {\n              color: '#333333',\n              textAlign: 'center'\n            },\n            children: row.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(DataTable, \"CG+g3GE0QLQUe8ezSDo2IcyZ7jM=\");\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","useState","useEffect","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TableSortLabel","TablePagination","jsxDEV","_jsxDEV","DataTable","data","_s","order","setOrder","orderBy","setOrderBy","currentPage","setCurrentPage","rowsPerPage","handleSort","column","isAsc","sort","a","b","startIndex","paginatedData","slice","component","children","sx","backgroundColor","color","fontWeight","textAlign","active","direction","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","row","index","paytype_id","amount","_c","$RefreshReg$"],"sources":["/Users/roshankhandelwal/Roshan/Applications/Practice By Numbers/frontend/src/components/DataTable.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  TableSortLabel,\n  TablePagination,\n} from '@mui/material';\n\nconst DataTable = ({ data }) => {\n  const [order, setOrder] = useState('asc');\n  const [orderBy, setOrderBy] = useState('');\n  const [currentPage, setCurrentPage] = useState(0);\n  const rowsPerPage = 10;\n\n  useEffect(() => {\n    setOrder('asc');\n    setOrderBy('');\n  }, [data]);\n\n  const handleSort = (column) => {\n    const isAsc = orderBy === column && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(column);\n    data.sort((a, b) => (isAsc ? (a[column] < b[column] ? -1 : 1) : a[column] > b[column] ? -1 : 1));\n  };\n\n  const startIndex = currentPage * rowsPerPage;\n  const paginatedData = data.slice(startIndex, startIndex + rowsPerPage);\n\n  return (\n    <TableContainer component={Paper}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell\n              sx={{\n                backgroundColor: '#1e293b', // Dark header background\n                color: '#ffffff', // White text\n                fontWeight: 'bold',\n                textAlign: 'center',\n              }}\n            >\n              <TableSortLabel\n                active={orderBy === 'paytype_id'}\n                direction={orderBy === 'paytype_id' ? order : 'asc'}\n                onClick={() => handleSort('paytype_id')}\n                sx={{\n                  color: '#ffffff', // Ensure the sort icon is also white\n                  '&:hover': {\n                    color: '#ffcc00', // Optional hover color\n                  },\n                }}\n              >\n                Pay Type ID\n              </TableSortLabel>\n            </TableCell>\n            <TableCell\n              sx={{\n                backgroundColor: '#1e293b',\n                color: '#ffffff',\n                fontWeight: 'bold',\n                textAlign: 'center',\n              }}\n            >\n              Amount\n            </TableCell>\n            {/* Add other headers similarly */}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {paginatedData.map((row, index) => (\n            <TableRow\n              key={index}\n              sx={{\n                backgroundColor: index % 2 === 0 ? '#f8f9fa' : '#ffffff', // Alternating row colors\n                '&:hover': {\n                  backgroundColor: '#e0f7fa', // Highlight on hover\n                },\n              }}\n            >\n              <TableCell\n                sx={{\n                  color: '#333333', // Row text color\n                  textAlign: 'center',\n                }}\n              >\n                {row.paytype_id}\n              </TableCell>\n              <TableCell\n                sx={{\n                  color: '#333333',\n                  textAlign: 'center',\n                }}\n              >\n                {row.amount}\n              </TableCell>\n              {/* Add other row cells similarly */}\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default DataTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}