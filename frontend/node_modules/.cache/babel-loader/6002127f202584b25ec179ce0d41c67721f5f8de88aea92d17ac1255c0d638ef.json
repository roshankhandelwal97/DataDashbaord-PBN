{"ast":null,"code":"var _jsxFileName = \"/Users/roshankhandelwal/Roshan/Applications/Practice By Numbers/frontend/src/components/Filters.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { TextField, MenuItem, Button, Checkbox, FormControlLabel } from '@mui/material';\nimport { fetchPaytypes, fetchEmployeeTypes, fetchProviders } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Filters = ({\n  filters,\n  setFilters,\n  onApplyFilters\n}) => {\n  _s();\n  const [paytypes, setPaytypes] = useState([]);\n  const [employeeTypes, setEmployeeTypes] = useState([]);\n  const [providers, setProviders] = useState([]);\n\n  // Fetch dynamic dropdown values\n  useEffect(() => {\n    fetchPaytypes().then(response => setPaytypes(response.data));\n    fetchEmployeeTypes().then(response => setEmployeeTypes(response.data));\n    fetchProviders().then(response => setProviders(response.data));\n  }, []);\n  const handleFilterChange = (name, value) => {\n    setFilters(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      gap: '10px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Start Date\",\n      type: \"date\",\n      value: filters.start_date || '',\n      onChange: e => handleFilterChange('start_date', e.target.value),\n      InputLabelProps: {\n        shrink: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"End Date\",\n      type: \"date\",\n      value: filters.end_date || '',\n      onChange: e => handleFilterChange('end_date', e.target.value),\n      InputLabelProps: {\n        shrink: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Min Amount\",\n      type: \"number\",\n      value: filters.min_amount || '',\n      onChange: e => handleFilterChange('min_amount', e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Max Amount\",\n      type: \"number\",\n      value: filters.max_amount || '',\n      onChange: e => handleFilterChange('max_amount', e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      select: true,\n      label: \"Pay Type\",\n      value: filters.paytype_id || '',\n      onChange: e => handleFilterChange('paytype_id', e.target.value),\n      children: paytypes.map(paytype => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: paytype.id,\n        children: paytype.name\n      }, paytype.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      select: true,\n      label: \"Provider\",\n      value: filters.provider_id || '',\n      onChange: e => handleFilterChange('provider_id', e.target.value),\n      children: providers.map(provider => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: provider.id,\n        children: provider.name\n      }, provider.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      select: true,\n      label: \"Employee Type\",\n      value: filters.employee_type_id || '',\n      onChange: e => handleFilterChange('employee_type_id', e.target.value),\n      children: employeeTypes.map(employeeType => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: employeeType.id,\n        children: employeeType.name\n      }, employeeType.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: filters.exclude_non_positive || false,\n        onChange: e => handleFilterChange('exclude_non_positive', e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this),\n      label: \"Exclude Non-Positive Amounts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: onApplyFilters,\n      children: \"Apply Filters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Filters, \"dDaNLV2CJRlVOnMoApFV/OVroaQ=\");\n_c = Filters;\nexport default Filters;\nvar _c;\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"names":["React","useEffect","useState","TextField","MenuItem","Button","Checkbox","FormControlLabel","fetchPaytypes","fetchEmployeeTypes","fetchProviders","jsxDEV","_jsxDEV","Filters","filters","setFilters","onApplyFilters","_s","paytypes","setPaytypes","employeeTypes","setEmployeeTypes","providers","setProviders","then","response","data","handleFilterChange","name","value","prev","style","display","flexWrap","gap","children","label","type","start_date","onChange","e","target","InputLabelProps","shrink","fileName","_jsxFileName","lineNumber","columnNumber","end_date","min_amount","max_amount","select","paytype_id","map","paytype","id","provider_id","provider","employee_type_id","employeeType","control","checked","exclude_non_positive","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/roshankhandelwal/Roshan/Applications/Practice By Numbers/frontend/src/components/Filters.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { TextField, MenuItem, Button, Checkbox, FormControlLabel } from '@mui/material';\nimport { fetchPaytypes, fetchEmployeeTypes, fetchProviders } from '../services/api';\n\nconst Filters = ({ filters, setFilters, onApplyFilters }) => {\n  const [paytypes, setPaytypes] = useState([]);\n  const [employeeTypes, setEmployeeTypes] = useState([]);\n  const [providers, setProviders] = useState([]);\n\n  // Fetch dynamic dropdown values\n  useEffect(() => {\n    fetchPaytypes().then((response) => setPaytypes(response.data));\n    fetchEmployeeTypes().then((response) => setEmployeeTypes(response.data));\n    fetchProviders().then((response) => setProviders(response.data));\n  }, []);\n\n  const handleFilterChange = (name, value) => {\n    setFilters((prev) => ({ ...prev, [name]: value }));\n  };\n\n  return (\n    <div style={{ display: 'flex', flexWrap: 'wrap', gap: '10px' }}>\n      {/* Date Range Filters */}\n      <TextField\n        label=\"Start Date\"\n        type=\"date\"\n        value={filters.start_date || ''}\n        onChange={(e) => handleFilterChange('start_date', e.target.value)}\n        InputLabelProps={{ shrink: true }}\n      />\n      <TextField\n        label=\"End Date\"\n        type=\"date\"\n        value={filters.end_date || ''}\n        onChange={(e) => handleFilterChange('end_date', e.target.value)}\n        InputLabelProps={{ shrink: true }}\n      />\n\n      {/* Amount Range Filters */}\n      <TextField\n        label=\"Min Amount\"\n        type=\"number\"\n        value={filters.min_amount || ''}\n        onChange={(e) => handleFilterChange('min_amount', e.target.value)}\n      />\n      <TextField\n        label=\"Max Amount\"\n        type=\"number\"\n        value={filters.max_amount || ''}\n        onChange={(e) => handleFilterChange('max_amount', e.target.value)}\n      />\n\n      {/* Pay Type Filter */}\n      <TextField\n        select\n        label=\"Pay Type\"\n        value={filters.paytype_id || ''}\n        onChange={(e) => handleFilterChange('paytype_id', e.target.value)}\n      >\n        {paytypes.map((paytype) => (\n          <MenuItem key={paytype.id} value={paytype.id}>\n            {paytype.name}\n          </MenuItem>\n        ))}\n      </TextField>\n\n      {/* Provider Filter */}\n      <TextField\n        select\n        label=\"Provider\"\n        value={filters.provider_id || ''}\n        onChange={(e) => handleFilterChange('provider_id', e.target.value)}\n      >\n        {providers.map((provider) => (\n          <MenuItem key={provider.id} value={provider.id}>\n            {provider.name}\n          </MenuItem>\n        ))}\n      </TextField>\n\n      {/* Employee Type Filter */}\n      <TextField\n        select\n        label=\"Employee Type\"\n        value={filters.employee_type_id || ''}\n        onChange={(e) => handleFilterChange('employee_type_id', e.target.value)}\n      >\n        {employeeTypes.map((employeeType) => (\n          <MenuItem key={employeeType.id} value={employeeType.id}>\n            {employeeType.name}\n          </MenuItem>\n        ))}\n      </TextField>\n\n      {/* Exclude Non-Positive Amounts */}\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={filters.exclude_non_positive || false}\n            onChange={(e) => handleFilterChange('exclude_non_positive', e.target.checked)}\n          />\n        }\n        label=\"Exclude Non-Positive Amounts\"\n      />\n\n      {/* Apply Filters */}\n      <Button variant=\"contained\" onClick={onApplyFilters}>\n        Apply Filters\n      </Button>\n    </div>\n  );\n};\n\nexport default Filters;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}