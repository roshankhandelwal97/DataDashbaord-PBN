{"ast":null,"code":"var _jsxFileName = \"/Users/roshankhandelwal/Roshan/Applications/Practice By Numbers/frontend/src/components/Filters.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchCategories } from '../services/api';\nimport { TextField, MenuItem, Button, Checkbox, FormControlLabel } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Filters = ({\n  filters,\n  setFilters,\n  onApplyFilters\n}) => {\n  _s();\n  const [categories, setCategories] = useState({\n    paytype_id: {},\n    provider_id: {},\n    employee_type_id: {}\n  });\n  useEffect(() => {\n    fetchCategories().then(response => {\n      // Ensure `response.data` is defined and contains the expected keys\n      const paytype_id = response.paytype_id || {};\n      const provider_id = response.provider_id || {};\n      const employee_type_id = response.employee_type_id || {};\n      setCategories({\n        paytype_id,\n        provider_id,\n        employee_type_id\n      });\n    }).catch(error => console.error('Error Fetching Categories:', error));\n  }, []);\n  const handleFilterChange = (name, value) => {\n    setFilters(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      gap: '10px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      select: true,\n      label: \"Pay Type\",\n      value: filters.paytype_id || '',\n      onChange: e => handleFilterChange('paytype_id', e.target.value),\n      children: Object.entries(categories.paytype_id).map(([id, name]) => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: id,\n        children: name\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      select: true,\n      label: \"Provider\",\n      value: filters.provider_id || '',\n      onChange: e => handleFilterChange('provider_id', e.target.value),\n      children: Object.entries(categories.provider_id).map(([id, name]) => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: id,\n        children: name\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      select: true,\n      label: \"Employee Type\",\n      value: filters.employee_type_id || '',\n      onChange: e => handleFilterChange('employee_type_id', e.target.value),\n      children: Object.entries(categories.employee_type_id).map(([id, name]) => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: id,\n        children: name\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: onApplyFilters,\n      children: \"Apply Filters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Filters, \"EOxyEfetej22d0usiAPolh+CFH8=\");\n_c = Filters;\nexport default Filters;\nvar _c;\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"names":["React","useEffect","useState","fetchCategories","TextField","MenuItem","Button","Checkbox","FormControlLabel","jsxDEV","_jsxDEV","Filters","filters","setFilters","onApplyFilters","_s","categories","setCategories","paytype_id","provider_id","employee_type_id","then","response","catch","error","console","handleFilterChange","name","value","prev","style","display","flexWrap","gap","children","select","label","onChange","e","target","Object","entries","map","id","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/roshankhandelwal/Roshan/Applications/Practice By Numbers/frontend/src/components/Filters.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchCategories } from '../services/api';\nimport { TextField, MenuItem, Button, Checkbox, FormControlLabel } from '@mui/material';\n\nconst Filters = ({ filters, setFilters, onApplyFilters }) => {\n  const [categories, setCategories] = useState({\n    paytype_id: {},\n    provider_id: {},\n    employee_type_id: {},\n  });\n\n  useEffect(() => {\n    fetchCategories()\n      .then((response) => {\n        // Ensure `response.data` is defined and contains the expected keys\n        const paytype_id = response.paytype_id || {};\n        const provider_id = response.provider_id || {};\n        const employee_type_id = response.employee_type_id || {};\n        setCategories({ paytype_id, provider_id, employee_type_id });\n      })\n      .catch((error) => console.error('Error Fetching Categories:', error));\n  }, []);\n\n  const handleFilterChange = (name, value) => {\n    setFilters((prev) => ({ ...prev, [name]: value }));\n  };\n\n  return (\n    <div style={{ display: 'flex', flexWrap: 'wrap', gap: '10px' }}>\n      {/* Pay Type Filter */}\n      <TextField\n        select\n        label=\"Pay Type\"\n        value={filters.paytype_id || ''}\n        onChange={(e) => handleFilterChange('paytype_id', e.target.value)}\n      >\n        {Object.entries(categories.paytype_id).map(([id, name]) => (\n          <MenuItem key={id} value={id}>\n            {name}\n          </MenuItem>\n        ))}\n      </TextField>\n\n      {/* Provider Filter */}\n      <TextField\n        select\n        label=\"Provider\"\n        value={filters.provider_id || ''}\n        onChange={(e) => handleFilterChange('provider_id', e.target.value)}\n      >\n        {Object.entries(categories.provider_id).map(([id, name]) => (\n          <MenuItem key={id} value={id}>\n            {name}\n          </MenuItem>\n        ))}\n      </TextField>\n\n      {/* Employee Type Filter */}\n      <TextField\n        select\n        label=\"Employee Type\"\n        value={filters.employee_type_id || ''}\n        onChange={(e) => handleFilterChange('employee_type_id', e.target.value)}\n      >\n        {Object.entries(categories.employee_type_id).map(([id, name]) => (\n          <MenuItem key={id} value={id}>\n            {name}\n          </MenuItem>\n        ))}\n      </TextField>\n\n      {/* Other Filters */}\n      {/* Add Date, Min/Max Amount, etc., as needed */}\n\n      {/* Apply Filters */}\n      <Button variant=\"contained\" onClick={onApplyFilters}>\n        Apply Filters\n      </Button>\n    </div>\n  );\n};\n\nexport default Filters;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}