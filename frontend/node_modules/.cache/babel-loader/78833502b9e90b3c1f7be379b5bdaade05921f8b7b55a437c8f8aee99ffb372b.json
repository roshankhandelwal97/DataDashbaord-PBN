{"ast":null,"code":"import axios from 'axios';\nconst BASE_URL = 'http://127.0.0.1:8000/api';\n\n// Fetch filtered data with dynamic parameters\nexport const fetchFilteredData = params => {\n  console.log('Sending API Request with Params:', params);\n  return axios.get(`${BASE_URL}/filtered-data/`, {\n    params\n  });\n};\n\n// Fetch paytypes\nexport const fetchPaytypes = () => {\n  return axios.get(`${BASE_URL}/filtered-data/`, {\n    params: {\n      type: 'categories'\n    }\n  });\n};\n\n// Fetch employee types\nexport const fetchEmployeeTypes = () => {\n  return axios.get(`${BASE_URL}/filtered-data/`, {\n    params: {\n      type: 'employee_types'\n    }\n  });\n};\n\n// Fetch providers\nexport const fetchProviders = () => {\n  return axios.get(`${BASE_URL}/filtered-data/`, {\n    params: {\n      type: 'providers'\n    }\n  });\n};\n\n// Fetch raw data\nexport const fetchRawData = () => {\n  return axios.get(`${BASE_URL}/filtered-data/`, {\n    params: {\n      type: 'raw'\n    }\n  });\n};\n\n// Fetch aggregates\nexport const fetchAggregates = params => {\n  return axios.get(`${BASE_URL}/filtered-data/`, {\n    params: {\n      type: 'aggregates',\n      ...params\n    }\n  });\n};\nexport const fetchFilteredDataWithNames = params => {\n  return axios.get(`${BASE_URL}/filtered-data/`, {\n    params\n  }).then(response => {\n    const data = response.data.values; // Assuming `values` contains the filtered data\n    const categories = response.data.categories; // Assuming `categories` contains mappings\n\n    // Map names for IDs\n    const mappedData = data.map(item => ({\n      ...item,\n      paytype_name: categories.paytype_id[item.paytype_id],\n      provider_name: categories.provider_id[item.provider_id],\n      employee_type_name: categories.employee_type_id[item.employee_type_id]\n    }));\n    return mappedData;\n  });\n};","map":{"version":3,"names":["axios","BASE_URL","fetchFilteredData","params","console","log","get","fetchPaytypes","type","fetchEmployeeTypes","fetchProviders","fetchRawData","fetchAggregates","fetchFilteredDataWithNames","then","response","data","values","categories","mappedData","map","item","paytype_name","paytype_id","provider_name","provider_id","employee_type_name","employee_type_id"],"sources":["/Users/roshankhandelwal/Roshan/Applications/Practice By Numbers/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'http://127.0.0.1:8000/api';\n\n// Fetch filtered data with dynamic parameters\nexport const fetchFilteredData = (params) => {\n  console.log('Sending API Request with Params:', params);\n  return axios.get(`${BASE_URL}/filtered-data/`, { params });\n};\n\n// Fetch paytypes\nexport const fetchPaytypes = () => {\n  return axios.get(`${BASE_URL}/filtered-data/`, { params: { type: 'categories' } });\n};\n\n// Fetch employee types\nexport const fetchEmployeeTypes = () => {\n  return axios.get(`${BASE_URL}/filtered-data/`, { params: { type: 'employee_types' } });\n};\n\n// Fetch providers\nexport const fetchProviders = () => {\n  return axios.get(`${BASE_URL}/filtered-data/`, { params: { type: 'providers' } });\n};\n\n// Fetch raw data\nexport const fetchRawData = () => {\n  return axios.get(`${BASE_URL}/filtered-data/`, { params: { type: 'raw' } });\n};\n\n// Fetch aggregates\nexport const fetchAggregates = (params) => {\n  return axios.get(`${BASE_URL}/filtered-data/`, { params: { type: 'aggregates', ...params } });\n};\n\nexport const fetchFilteredDataWithNames = (params) => {\n    return axios.get(`${BASE_URL}/filtered-data/`, { params }).then((response) => {\n      const data = response.data.values; // Assuming `values` contains the filtered data\n      const categories = response.data.categories; // Assuming `categories` contains mappings\n  \n      // Map names for IDs\n      const mappedData = data.map((item) => ({\n        ...item,\n        paytype_name: categories.paytype_id[item.paytype_id],\n        provider_name: categories.provider_id[item.provider_id],\n        employee_type_name: categories.employee_type_id[item.employee_type_id],\n      }));\n  \n      return mappedData;\n    });\n  };\n  \n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,2BAA2B;;AAE5C;AACA,OAAO,MAAMC,iBAAiB,GAAIC,MAAM,IAAK;EAC3CC,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEF,MAAM,CAAC;EACvD,OAAOH,KAAK,CAACM,GAAG,CAAC,GAAGL,QAAQ,iBAAiB,EAAE;IAAEE;EAAO,CAAC,CAAC;AAC5D,CAAC;;AAED;AACA,OAAO,MAAMI,aAAa,GAAGA,CAAA,KAAM;EACjC,OAAOP,KAAK,CAACM,GAAG,CAAC,GAAGL,QAAQ,iBAAiB,EAAE;IAAEE,MAAM,EAAE;MAAEK,IAAI,EAAE;IAAa;EAAE,CAAC,CAAC;AACpF,CAAC;;AAED;AACA,OAAO,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EACtC,OAAOT,KAAK,CAACM,GAAG,CAAC,GAAGL,QAAQ,iBAAiB,EAAE;IAAEE,MAAM,EAAE;MAAEK,IAAI,EAAE;IAAiB;EAAE,CAAC,CAAC;AACxF,CAAC;;AAED;AACA,OAAO,MAAME,cAAc,GAAGA,CAAA,KAAM;EAClC,OAAOV,KAAK,CAACM,GAAG,CAAC,GAAGL,QAAQ,iBAAiB,EAAE;IAAEE,MAAM,EAAE;MAAEK,IAAI,EAAE;IAAY;EAAE,CAAC,CAAC;AACnF,CAAC;;AAED;AACA,OAAO,MAAMG,YAAY,GAAGA,CAAA,KAAM;EAChC,OAAOX,KAAK,CAACM,GAAG,CAAC,GAAGL,QAAQ,iBAAiB,EAAE;IAAEE,MAAM,EAAE;MAAEK,IAAI,EAAE;IAAM;EAAE,CAAC,CAAC;AAC7E,CAAC;;AAED;AACA,OAAO,MAAMI,eAAe,GAAIT,MAAM,IAAK;EACzC,OAAOH,KAAK,CAACM,GAAG,CAAC,GAAGL,QAAQ,iBAAiB,EAAE;IAAEE,MAAM,EAAE;MAAEK,IAAI,EAAE,YAAY;MAAE,GAAGL;IAAO;EAAE,CAAC,CAAC;AAC/F,CAAC;AAED,OAAO,MAAMU,0BAA0B,GAAIV,MAAM,IAAK;EAClD,OAAOH,KAAK,CAACM,GAAG,CAAC,GAAGL,QAAQ,iBAAiB,EAAE;IAAEE;EAAO,CAAC,CAAC,CAACW,IAAI,CAAEC,QAAQ,IAAK;IAC5E,MAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC;IACnC,MAAMC,UAAU,GAAGH,QAAQ,CAACC,IAAI,CAACE,UAAU,CAAC,CAAC;;IAE7C;IACA,MAAMC,UAAU,GAAGH,IAAI,CAACI,GAAG,CAAEC,IAAI,KAAM;MACrC,GAAGA,IAAI;MACPC,YAAY,EAAEJ,UAAU,CAACK,UAAU,CAACF,IAAI,CAACE,UAAU,CAAC;MACpDC,aAAa,EAAEN,UAAU,CAACO,WAAW,CAACJ,IAAI,CAACI,WAAW,CAAC;MACvDC,kBAAkB,EAAER,UAAU,CAACS,gBAAgB,CAACN,IAAI,CAACM,gBAAgB;IACvE,CAAC,CAAC,CAAC;IAEH,OAAOR,UAAU;EACnB,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}