{"ast":null,"code":"var _jsxFileName = \"/Users/roshankhandelwal/Roshan/Applications/Practice By Numbers/frontend/src/components/Filters.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { TextField, MenuItem, Button, Checkbox, FormControlLabel } from '@mui/material';\nimport { fetchPaytypes } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Filters = ({\n  filters,\n  setFilters,\n  onApplyFilters\n}) => {\n  _s();\n  const [paytypes, setPaytypes] = useState([]);\n  const [providers, setProviders] = useState([]);\n  const [employeeTypes, setEmployeeTypes] = useState([]);\n  useEffect(() => {\n    fetchPaytypes().then(response => {\n      const data = response.data;\n\n      // Extract paytypes, providers, and employee types\n      setPaytypes(Object.entries(data.paytype_id).map(([id, name]) => ({\n        id,\n        name\n      })));\n      setProviders(Object.entries(data.provider_id).map(([id, name]) => ({\n        id,\n        name\n      })));\n      setEmployeeTypes(Object.entries(data.employee_type_id).map(([id, name]) => ({\n        id,\n        name\n      })));\n    }).catch(error => {\n      console.error('Error Fetching Categories:', error);\n      setPaytypes([]);\n      setProviders([]);\n      setEmployeeTypes([]);\n    });\n  }, []);\n  const handleFilterChange = (name, value) => {\n    setFilters(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      gap: '10px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Start Date\",\n      type: \"date\",\n      value: filters.start_date || '',\n      onChange: e => handleFilterChange('start_date', e.target.value),\n      InputLabelProps: {\n        shrink: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"End Date\",\n      type: \"date\",\n      value: filters.end_date || '',\n      onChange: e => handleFilterChange('end_date', e.target.value),\n      InputLabelProps: {\n        shrink: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Min Amount\",\n      type: \"number\",\n      value: filters.min_amount || '',\n      onChange: e => handleFilterChange('min_amount', e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Max Amount\",\n      type: \"number\",\n      value: filters.max_amount || '',\n      onChange: e => handleFilterChange('max_amount', e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      select: true,\n      label: \"Pay Type\",\n      value: filters.paytype_id || '',\n      onChange: e => handleFilterChange('paytype_id', e.target.value),\n      children: paytypes.map(paytype => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: paytype.id,\n        children: paytype.name\n      }, paytype.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      select: true,\n      label: \"Provider\",\n      value: filters.provider_id || '',\n      onChange: e => handleFilterChange('provider_id', e.target.value),\n      children: providers.map(provider => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: provider.id,\n        children: provider.name\n      }, provider.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      select: true,\n      label: \"Employee Type\",\n      value: filters.employee_type_id || '',\n      onChange: e => handleFilterChange('employee_type_id', e.target.value),\n      children: employeeTypes.map(employeeType => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: employeeType.id,\n        children: employeeType.name\n      }, employeeType.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: filters.exclude_non_positive || false,\n        onChange: e => handleFilterChange('exclude_non_positive', e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this),\n      label: \"Exclude Non-Positive Amounts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: onApplyFilters,\n      children: \"Apply Filters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Filters, \"6dhA+hbCRLJwErhjUA8z9kS21XU=\");\n_c = Filters;\nexport default Filters;\nvar _c;\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"names":["React","useEffect","useState","TextField","MenuItem","Button","Checkbox","FormControlLabel","fetchPaytypes","jsxDEV","_jsxDEV","Filters","filters","setFilters","onApplyFilters","_s","paytypes","setPaytypes","providers","setProviders","employeeTypes","setEmployeeTypes","then","response","data","Object","entries","paytype_id","map","id","name","provider_id","employee_type_id","catch","error","console","handleFilterChange","value","prev","style","display","flexWrap","gap","children","label","type","start_date","onChange","e","target","InputLabelProps","shrink","fileName","_jsxFileName","lineNumber","columnNumber","end_date","min_amount","max_amount","select","paytype","provider","employeeType","control","checked","exclude_non_positive","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/roshankhandelwal/Roshan/Applications/Practice By Numbers/frontend/src/components/Filters.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { TextField, MenuItem, Button, Checkbox, FormControlLabel } from '@mui/material';\nimport { fetchPaytypes } from '../services/api';\n\nconst Filters = ({ filters, setFilters, onApplyFilters }) => {\n  const [paytypes, setPaytypes] = useState([]);\n  const [providers, setProviders] = useState([]);\n  const [employeeTypes, setEmployeeTypes] = useState([]);\n\n  useEffect(() => {\n    fetchPaytypes()\n      .then((response) => {\n        const data = response.data;\n\n        // Extract paytypes, providers, and employee types\n        setPaytypes(Object.entries(data.paytype_id).map(([id, name]) => ({ id, name })));\n        setProviders(Object.entries(data.provider_id).map(([id, name]) => ({ id, name })));\n        setEmployeeTypes(Object.entries(data.employee_type_id).map(([id, name]) => ({ id, name })));\n      })\n      .catch((error) => {\n        console.error('Error Fetching Categories:', error);\n        setPaytypes([]);\n        setProviders([]);\n        setEmployeeTypes([]);\n      });\n  }, []);\n\n  const handleFilterChange = (name, value) => {\n    setFilters((prev) => ({ ...prev, [name]: value }));\n  };\n\n  return (\n    <div style={{ display: 'flex', flexWrap: 'wrap', gap: '10px' }}>\n      {/* Date Range Filters */}\n      <TextField\n        label=\"Start Date\"\n        type=\"date\"\n        value={filters.start_date || ''}\n        onChange={(e) => handleFilterChange('start_date', e.target.value)}\n        InputLabelProps={{ shrink: true }}\n      />\n      <TextField\n        label=\"End Date\"\n        type=\"date\"\n        value={filters.end_date || ''}\n        onChange={(e) => handleFilterChange('end_date', e.target.value)}\n        InputLabelProps={{ shrink: true }}\n      />\n\n      {/* Amount Range Filters */}\n      <TextField\n        label=\"Min Amount\"\n        type=\"number\"\n        value={filters.min_amount || ''}\n        onChange={(e) => handleFilterChange('min_amount', e.target.value)}\n      />\n      <TextField\n        label=\"Max Amount\"\n        type=\"number\"\n        value={filters.max_amount || ''}\n        onChange={(e) => handleFilterChange('max_amount', e.target.value)}\n      />\n\n      {/* Pay Type Filter */}\n      <TextField\n        select\n        label=\"Pay Type\"\n        value={filters.paytype_id || ''}\n        onChange={(e) => handleFilterChange('paytype_id', e.target.value)}\n      >\n        {paytypes.map((paytype) => (\n          <MenuItem key={paytype.id} value={paytype.id}>\n            {paytype.name}\n          </MenuItem>\n        ))}\n      </TextField>\n\n      {/* Provider Filter */}\n      <TextField\n        select\n        label=\"Provider\"\n        value={filters.provider_id || ''}\n        onChange={(e) => handleFilterChange('provider_id', e.target.value)}\n      >\n        {providers.map((provider) => (\n          <MenuItem key={provider.id} value={provider.id}>\n            {provider.name}\n          </MenuItem>\n        ))}\n      </TextField>\n\n      {/* Employee Type Filter */}\n      <TextField\n        select\n        label=\"Employee Type\"\n        value={filters.employee_type_id || ''}\n        onChange={(e) => handleFilterChange('employee_type_id', e.target.value)}\n      >\n        {employeeTypes.map((employeeType) => (\n          <MenuItem key={employeeType.id} value={employeeType.id}>\n            {employeeType.name}\n          </MenuItem>\n        ))}\n      </TextField>\n\n      {/* Exclude Non-Positive Amounts */}\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={filters.exclude_non_positive || false}\n            onChange={(e) => handleFilterChange('exclude_non_positive', e.target.checked)}\n          />\n        }\n        label=\"Exclude Non-Positive Amounts\"\n      />\n\n      {/* Apply Filters */}\n      <Button variant=\"contained\" onClick={onApplyFilters}>\n        Apply Filters\n      </Button>\n    </div>\n  );\n};\n\nexport default Filters;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}