{"ast":null,"code":"var _jsxFileName = \"/Users/roshankhandelwal/Roshan/Applications/Practice By Numbers/frontend/src/components/Filters.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { TextField, MenuItem, Button } from '@mui/material';\nimport '../styles/Filters.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Filters = ({\n  filters,\n  setFilters,\n  onApplyFilters,\n  onResetFilters\n}) => {\n  _s();\n  const [paytypes, setPaytypes] = useState([]);\n  const [providers, setProviders] = useState([]);\n  const [employeeTypes, setEmployeeTypes] = useState([]);\n  useEffect(() => {\n    // Mock fetching categories - Replace with API call if necessary\n    setPaytypes([{\n      id: '1',\n      name: 'Type 1'\n    }, {\n      id: '2',\n      name: 'Type 2'\n    }]);\n    setProviders([{\n      id: '1',\n      name: 'Provider 1'\n    }, {\n      id: '2',\n      name: 'Provider 2'\n    }]);\n    setEmployeeTypes([{\n      id: '1',\n      name: 'Employee 1'\n    }, {\n      id: '2',\n      name: 'Employee 2'\n    }]);\n  }, []);\n  const handleFilterChange = (name, value) => {\n    setFilters(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filters-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"filter-title\",\n      children: \"Filter Options\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      select: true,\n      label: \"Pay Type\",\n      value: filters.paytype_id || '',\n      onChange: e => handleFilterChange('paytype_id', e.target.value),\n      className: \"filter-field\",\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"\",\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), paytypes.map(paytype => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: paytype.id,\n        children: paytype.name\n      }, paytype.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      select: true,\n      label: \"Provider\",\n      value: filters.provider_id || '',\n      onChange: e => handleFilterChange('provider_id', e.target.value),\n      className: \"filter-field\",\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"\",\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), providers.map(provider => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: provider.id,\n        children: provider.name\n      }, provider.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Min Amount\",\n      type: \"number\",\n      value: filters.min_amount || '',\n      onChange: e => handleFilterChange('min_amount', e.target.value),\n      className: \"filter-field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Max Amount\",\n      type: \"number\",\n      value: filters.max_amount || '',\n      onChange: e => handleFilterChange('max_amount', e.target.value),\n      className: \"filter-field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: onApplyFilters,\n        children: \"Apply Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"secondary\",\n        onClick: onResetFilters,\n        children: \"Reset Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Filters, \"6dhA+hbCRLJwErhjUA8z9kS21XU=\");\n_c = Filters;\nexport default Filters;\nvar _c;\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"names":["React","useEffect","useState","TextField","MenuItem","Button","jsxDEV","_jsxDEV","Filters","filters","setFilters","onApplyFilters","onResetFilters","_s","paytypes","setPaytypes","providers","setProviders","employeeTypes","setEmployeeTypes","id","name","handleFilterChange","value","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","select","label","paytype_id","onChange","e","target","map","paytype","provider_id","provider","type","min_amount","max_amount","variant","color","onClick","_c","$RefreshReg$"],"sources":["/Users/roshankhandelwal/Roshan/Applications/Practice By Numbers/frontend/src/components/Filters.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { TextField, MenuItem, Button } from '@mui/material';\nimport '../styles/Filters.css';\n\nconst Filters = ({ filters, setFilters, onApplyFilters, onResetFilters }) => {\n  const [paytypes, setPaytypes] = useState([]);\n  const [providers, setProviders] = useState([]);\n  const [employeeTypes, setEmployeeTypes] = useState([]);\n\n  useEffect(() => {\n    // Mock fetching categories - Replace with API call if necessary\n    setPaytypes([{ id: '1', name: 'Type 1' }, { id: '2', name: 'Type 2' }]);\n    setProviders([{ id: '1', name: 'Provider 1' }, { id: '2', name: 'Provider 2' }]);\n    setEmployeeTypes([{ id: '1', name: 'Employee 1' }, { id: '2', name: 'Employee 2' }]);\n  }, []);\n\n  const handleFilterChange = (name, value) => {\n    setFilters((prev) => ({ ...prev, [name]: value }));\n  };\n\n  return (\n    <div className=\"filters-container\">\n      <h2 className=\"filter-title\">Filter Options</h2>\n      <TextField\n        select\n        label=\"Pay Type\"\n        value={filters.paytype_id || ''}\n        onChange={(e) => handleFilterChange('paytype_id', e.target.value)}\n        className=\"filter-field\"\n      >\n        <MenuItem value=\"\">All</MenuItem>\n        {paytypes.map((paytype) => (\n          <MenuItem key={paytype.id} value={paytype.id}>\n            {paytype.name}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        select\n        label=\"Provider\"\n        value={filters.provider_id || ''}\n        onChange={(e) => handleFilterChange('provider_id', e.target.value)}\n        className=\"filter-field\"\n      >\n        <MenuItem value=\"\">All</MenuItem>\n        {providers.map((provider) => (\n          <MenuItem key={provider.id} value={provider.id}>\n            {provider.name}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        label=\"Min Amount\"\n        type=\"number\"\n        value={filters.min_amount || ''}\n        onChange={(e) => handleFilterChange('min_amount', e.target.value)}\n        className=\"filter-field\"\n      />\n      <TextField\n        label=\"Max Amount\"\n        type=\"number\"\n        value={filters.max_amount || ''}\n        onChange={(e) => handleFilterChange('max_amount', e.target.value)}\n        className=\"filter-field\"\n      />\n\n      <div className=\"filter-buttons\">\n        <Button variant=\"contained\" color=\"primary\" onClick={onApplyFilters}>\n          Apply Filters\n        </Button>\n        <Button variant=\"outlined\" color=\"secondary\" onClick={onResetFilters}>\n          Reset Filters\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Filters;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}